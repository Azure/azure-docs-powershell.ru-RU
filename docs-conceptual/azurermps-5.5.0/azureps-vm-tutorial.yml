### YamlMime:Tutorial
title: "Создание виртуальных машин с помощью Azure PowerShell"
metadata:
  title: "Создание виртуальных машин с помощью Azure PowerShell"
  description: "Начните создавать виртуальные машины с помощью Azure PowerShell."
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2018
  ms.author: sewhee
  author: sdwheeler
  manager: carmonm
  ms.devlang: azure-powershell
  ms.technology: azure
  ms.openlocfilehash: bb5024927da7888dca406a522fa39dfe225afb89
  ms.sourcegitcommit: 3842efd1eb2d16f7c6d9ae87d6d7916b770658c1
  ms.translationtype: HT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 03/05/2018
items:
- durationInMinutes: 1
  content: "В этом руководстве описано, как настроить виртуальную машину с помощью Azure PowerShell. Вы также узнаете, как создавать запросы выходных данных, повторно использовать ресурсы Azure и очищать ресурсы.\n\nДля работы с этим руководством вам понадобится интерактивная служба Azure Cloud Shell или вы можете [установить Azure PowerShell](install-azurerm-ps.md) локально.\n\nИспользуйте клавиши __CTRL+SHIFT+V__ (__CMD+SHIFT+V__ в macOS), чтобы вставить текст руководства в Azure Cloud Shell."
- durationInMinutes: 1
  title: "Вход в систему"
  content: "Если вы используете локальную установку Azure PowerShell, вам нужно войти, прежде чем выполнять какие-либо действия.\n\n```powershell\nLogin-AzureRmAccount\n```\n\nВыполните вход, следуя инструкциям в окне терминала."
- durationInMinutes: 1
  title: "Создание группы ресурсов"
  content: "В Azure все ресурсы включаются в одну группу управления ресурсами. Эти группы обеспечивают логическое объединение ресурсов, позволяя работать с ними как с коллекцией.\nВ этом руководстве все созданные ресурсы помещаются в одну группу с именем `TutorialResources`.\n\n```powershell\nNew-AzureRmResourceGroup -Name TutorialResources -Location eastus\n```\n\n```Output\nResourceGroupName : TutorialResources\nLocation          : eastus\nProvisioningState : Succeeded\nTags              :\nResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources\n```"
- durationInMinutes: 1
  title: "Создание учетных данных администратора для виртуальной машины"
  content: "Перед созданием виртуальной машины необходимо создать объект учетных данных, содержащий имя пользователя и пароль учетной записи администратора виртуальной машины Windows.\n\n```powershell\n$cred = Get-Credential -Message \"Enter a username and password for the virtual machine.\"\n```\n\nКогда отобразится запрос, введите имя пользователя и пароль. Полученный объект учетных данных передается как параметр в следующем шаге.\n\n```Output\nWindows PowerShell credential request.\nEnter a username and password for the virtual machine.\nUser: tutorAdmin\nPassword for user tutorAdmin: *********\n```"
- durationInMinutes: 4
  title: "Создание виртуальной машины"
  content: "Виртуальные машины в Azure имеют большое число зависимостей. Azure PowerShell создает эти ресурсы на основе указанных аргументов командной строки. Для удобства чтения мы используем [сплаттинг PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting), чтобы передать параметры в командлеты Azure PowerShell.\n\nСоздайте виртуальную машину под управлением Windows.\n\n```powershell\n$vmParams = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM1'\n  Location = 'eastus'\n  ImageName = 'Win2016Datacenter'\n  PublicIpAddressName = 'tutorialPublicIp'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM1 = New-AzureRmVM @vmParams\n```\nПри создании виртуальной машины отображаются используемые значения параметров и создаваемые ресурсы Azure.\nPowerShell заменит индикатор хода выполнения, как показано ниже.\n\n```Output\n Creating Azure resources\n  39% \\\n  [ooooooooooooooooooooooooooooooooooo                                                                 ]\n\n  Creating TutorialVM1 virtual machine.\n```\n\nКогда виртуальная машина будет создана, мы сможем просмотреть результаты на портале Azure или проверить переменную \\$newVM1.\n\n```powershell\n$newVM1\n```\n\n```Output\nResourceGroupName : TutorialResources\nId                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1\nVmId              : 12345678-9abc-def0-1234-56789abcedf0\nName              : TutorialVM1\nType              : Microsoft.Compute/virtualMachines\nLocation          : eastus\nTags              : {}\nHardwareProfile   : {VmSize}\nNetworkProfile    : {NetworkInterfaces}\nOSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState : Succeeded\nStorageProfile    : {ImageReference, OsDisk, DataDisks}\n```\n\nЗначения свойств, перечисленные внутри фигурных скобок, — это вложенные объекты. В следующем шаге мы просмотрим конкретные значения этих вложенных объектов."
- durationInMinutes: 5
  title: "Получение сведений о виртуальной машине с помощью запросов"
  content: "Давайте получим более подробные сведения о созданной виртуальной машине. В этом примере мы проверим имя виртуальной машины и созданную учетную запись администратора.\n\n```powershell\n$newVM1.OSProfile | Select-Object ComputerName,AdminUserName\n```\n\n```Output\nComputerName AdminUsername\n------------ -------------\nTutorialVM1  tutorialAdmin\n```\n\nМы можем использовать и другие команды Azure PowerShell, чтобы получить конкретные сведения о конфигурации сети.\n\n```powershell\n$newVM1 | Get-AzureRmNetworkInterface |\n  Select-Object -ExpandProperty IpConfigurations |\n    Select-Object Name,PrivateIpAddress\n```\n\nВ этом примере мы используем конвейер PowerShell, чтобы отправить объект \\$newVM1 в командлет `Get-AzureRmNetworkInterface`. Из результирующего объекта сетевого интерфейса мы выбираем вложенный объект IpConfigurations. Из объекта IpConfigurations мы выбираем свойства Name и PrivateIpAddress.\n\n```Output\nName        PrivateIpAddress\n----        ----------------\nTutorialVM1 192.168.1.4\n```\n\nЧтобы убедиться, что виртуальная машина запущена, необходимо подключиться через удаленный рабочий стол. Для этого необходимо знать общедоступный IP-адрес.\n\n```powershell\n$publicIp = Get-AzureRmPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources\n\n$publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}\n```\n\nВ этом примере мы используем `Get-AzureRmPublicIpAddress` и помещаем результаты в переменную \\$publicIp. Из этой переменной мы выбираем свойства и используем выражение, чтобы получить вложенное свойство Fqdn.\n\n```Output\nName             IpAddress           FQDN\n----             ---------           ----\ntutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com\n```\n\nС локального компьютера можно выполнить следующую команду для подключения к виртуальной машине через удаленный рабочий стол.\n\n```powershell\nmstsc.exe /v <PUBLIC_IP_ADDRESS>\n```\n\nСм. дополнительные сведения о [запрашивании свойств объектов Azure](./queries-azureps.md)."
- durationInMinutes: 4
  title: "Создание виртуальной машины в существующей подсети"
  content: "Вторая виртуальная машина использует существующую подсеть.\n\n```powershell\n$vm2Params = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM2'\n  ImageName = 'Win2016Datacenter'\n  VirtualNetworkName = 'TutorialVM1'\n  SubnetName = 'TutorialVM1'\n  PublicIpAddressName = 'tutorialPublicIp2'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM2 = New-AzureRmVM @vm2Params\n\n$newVM2\n```\n\n```Output\nResourceGroupName        : TutorialResources\nId                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2\nVmId                     : 12345678-9abc-def0-1234-56789abcedf1\nName                     : TutorialVM2\nType                     : Microsoft.Compute/virtualMachines\nLocation                 : eastus\nTags                     : {}\nHardwareProfile          : {VmSize}\nNetworkProfile           : {NetworkInterfaces}\nOSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState        : Succeeded\nStorageProfile           : {ImageReference, OsDisk, DataDisks}\nFullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com\n```\n\nВы можете пропустить несколько шагов, чтобы получить общедоступный IP-адрес новой виртуальной машины, так как он возвращается в свойстве FullyQualifiedDomainName объекта \\$newVM2. Используйте следующую команду для подключения с помощью удаленного рабочего стола.\n\n```powershell\nmstsc.exe /v $newVM2.FullyQualifiedDomainName\n```"
- durationInMinutes: 4
  title: "Очистка"
  content: "Теперь, когда вы завершили работу с этим руководством, можно очистить созданные ресурсы. Вы можете удалить отдельные ресурсы с помощью команды `Remove-AzureRmResource`. Но безопаснее будет удалить все ресурсы в группе ресурсов, удалив саму группу с помощью команды `Remove-AzureRmResourceGroup`.\n\n```powershell\n$job = Remove-AzureRmResourceGroup -Name TutorialResources -Force -AsJob\n\n$job\n```\n\n```Output\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\n--     ----            -------------   -----         -----------     --------             -------\n1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzureRmResource...\n```\n\nЭта команда удаляет ресурсы, созданные при работе с руководством, и гарантированно удаляет их в правильном порядке. Параметр `-AsJob` предотвращает блокировку PowerShell в ходе удаления. Чтобы дождаться завершения удаления, используйте следующую команду:\n\n```powershell\nWait-Job -Id $job.Id\n```\n\nОчистка ресурсов — это последнее действие в рамках этого руководства. Теперь еще раз вкратце повторите все, о чем вы узнали. Также вы можете воспользоваться ссылками на ресурсы, которые помогут вам перейти к дальнейшим действиям."
- durationInMinutes: 1
  title: "Сводка"
  content: "\nПоздравляем! Вы узнали, как создавать виртуальные машины с новыми или существующими ресурсами, использовать выражения и другие команды Azure PowerShell для записи данных в переменные оболочки, а также выполнять поиск некоторых ресурсов, которые создаются для виртуальных машин Azure.\n\nВаши дальнейшие действия будут зависеть от того, для чего вы планируете использовать Azure PowerShell. Доступно множество материалов, которые подробно описывают использование компонентов, рассматриваемых в этом руководстве.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Подробная документация по Azure PowerShell\n\nИзучение полной [документации по Azure PowerShell](overview.md) может занять какое-то время.\n\nДополнительные сведения о командах, используемых в этом руководстве, см. в следующих ресурсах.\n\n- [New-AzureRmResourceGroup](/powershell/module/azurerm.resources/new-azurermresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzureRmVM](/powershell/module/azurerm.compute/new-azurermvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzureRmPublicIpAddress](/powershell/module/azurerm.network/get-AzureRmPublicIpAddress)\n- [Remove-AzureRmResourceGroup](/powershell/module/azurerm.resources/Remove-AzureRmResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nНиже также приведены ресурсы с подробным описание функций, рассматриваемых в этом руководстве.\n\n- [Сплаттинг PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Запросы](queries-azureps.md)\n- [Форматирование](formatting-output.md)\n- [Использование заданий PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Примеры сценариев\n\nЕсли вы хотите начать работу с определенными задачами прямо сейчас, изучите некоторые примеры скриптов.\n\n- [Виртуальные машины Linux](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Виртуальные машины Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Веб-приложения](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Базы данных SQL](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [База данных Cosmos](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Отзыв\n\nЧтобы оставить отзыв, поделиться предложениями или задать вопросы, вы можете связаться с нами разными способами.\n\n* `Send-Feedback` — это встроенная команда Azure PowerShell, которая позволяет отправить отзыв команде в свободной форме.\n* Можно оставить запрос функции или сообщение об ошибке в [хранилище Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Кроме того, задать вопрос или получить разъяснение можно в [репозитории с документацией Azure PowerShell](https://github.com/Azure/azure-docs-powershell/issues).\n\nМы надеемся, что вам понравится работать с Azure PowerShell!"
